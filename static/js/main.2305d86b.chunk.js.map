{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","captialize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2305d86b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\"> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n  </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label mx-2\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {/* <form className=\"d-flex\">\r\n          <input\r\n            className=\"form-control me-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n          />\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form> */}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\r\n\r\nNavbar.defaultProps = { title: \"Set Title here\", aboutText: \"About\" };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\")\r\n  };\r\n  const handleDownClick = () => {\r\n    // console.log(\"Lowercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\")\r\n  };\r\n  const clearTheText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text is cleared\", \"success\")\r\n  };\r\n  const handleCopy = () => {\r\n    // console.log(\"Copy was clicked\" + text);\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text is copied\", \"success\")\r\n  };\r\n  const handleExtraSpace = ()=>{\r\n    let newText = text.split(/[ ] +/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra Space are removed\", \"success\")\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  //   setText('newText');\r\n  return (\r\n    <>\r\n      <div className=\"container\" style = {{color: props.mode === 'dark' ? 'white': 'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"10\"\r\n            style = {{backgroundColor: props.mode === 'dark' ? '#042743': 'white', color : props.mode === 'dark' ? 'white': 'black'}}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleUpClick}>\r\n          Conver to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleDownClick}>\r\n          Conver to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={clearTheText}>\r\n          Clear\r\n        </button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleCopy}>\r\n          Copy \r\n        </button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleExtraSpace}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style = {{color: props.mode === 'dark' ? 'white': 'black'}}>\r\n      <h2>Your Text Summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} character</p>\r\n      <p>{0.008 * text.split(\" \").length} minutes you can read this</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in the text above to preveiw here\"}</p></div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const captialize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n      <strong>{captialize(props.alert.type)}</strong> : {props.alert.msg}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\n// import About from \"./Components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n        {/*<Router>*/}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/*<Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n          <Route exact path=\"/\">*/}\n            <TextForm\n            showAlert={showAlert}\n            heading=\"Enter the text to analyze\"\n            mode={mode}\n            />\n            </div>\n            {/*</Route>\n            </Switch>\n            // </Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}